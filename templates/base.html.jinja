{% macro alert_block(text, type='warning') -%}
<div class="alert alert-{{ type }}" role="alert">
    {{ text }}
</div>
{%- endmacro %}

<!doctype html>
<html lang="ru" data-bs-theme="light"> 
<head>
    {% block head %}
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.1/font/bootstrap-icons.css">
    <style>
        /* Светлая тема с приглушенными цветами и темная тема */
        :root {
            --bg-color: #f9fafb; /* Светлый фон */
            --text-color: #212529; /* Темный текст */
            --navbar-bg: #414f57; /* Цвет навигационной панели */
            --sidebar-bg: #ffffff; /* Цвет бокового меню */
            --link-color: #007bff; /* Цвет ссылок */
            --btn-bg: #15c6b9; /* Цвет кнопок */
            --btn-bg-hover: #01a8e5; /* Цвет кнопок */
            --bs-btn-active-bg: #0a97b4;
            --bs-btn-active-color: #fff;
            --icon-color: #6c757d; /* Приглушенный цвет иконок */
            --table-left-padding: 1.0rem;
        }

        [data-bs-theme="dark"] {
            --bg-color: #212529; /* Темный фон */
            --text-color: #f8f9fa; /* Светлый текст */
            --navbar-bg: #343a40; /* Темная навигационная панель */
            --sidebar-bg: #343a40; /* Темное боковое меню */
            --link-color: #0dcaf0; /* Цвет ссылок в темной теме */
            --btn-bg: #15c6b9; /* Цвет кнопок в темной теме */
            --btn-bg-hover: #0dcaf0; /* Цвет кнопок */
            --bs-btn-active-bg: #0a97b4;
            --bs-btn-active-color: #fff;
            --icon-color: #adb5bd; /* Цвет иконок в темной теме */
        }

        body {
            padding-top: 56px; /* Отступ для фиксированной навигационной панели */
            background-color: var(--bg-color);
            color: var(--text-color);
            transition: background-color 0.3s, color 0.3s;
        }

        /* Стили для навбара */
        .navbar {
            background-color: var(--navbar-bg) !important;
            transition: background-color 0.3s;
        }

        /* Стили для бокового меню */
        .offcanvas {
            background-color: var(--sidebar-bg) !important;
            color: var(--text-color);
        }

        /* Стили для иконок помощи */
        .help-icon {
            color: var(--icon-color); /* Приглушенный цвет иконок */
            font-size: 0.9em; /* Уменьшенный размер иконки */
            margin-left: 5px; /* Отступ от текста */
        }

        /* Стили для кнопок */
        .btn-custom {
            background-color: var(--btn-bg);
            color: #fff;
            border: none;
            transition: background-color 0.3s;
        }
        .btn-custom:hover {
            background-color: var(--btn-bg-hover);
            color: #fff;
        }

        /* Кастомный спойлер-информация */
        .info-accordion {
            --bs-accordion-color: var(--bs-primary-text-emphasis);
            --bs-accordion-bg: var(--bs-primary-bg-subtle);
        }

        /* Кастомная таблица с боковыми границами*/
        .tab-content-custom {
            border-left: var(--bs-border-width) solid var(--bs-border-color);
            border-right: var(--bs-border-width) solid var(--bs-border-color);
        }

        /* Стили для основного контента */
        .graph-container {
            width: 100%;
        }

        /* Стили для заголовка с ссылкой */
        .header-with-link {
            display: flex;
            align-items: center;
            /* margin-bottom: 20px; */
        }
        .header-with-link a {
            margin-right: 15px;
            /* color: var(--text-color); */
            text-decoration: none;
            font-size: 1.5rem;
        }
        .header-with-link a:hover {
            text-decoration: underline;
        }
        g > text {
            fill: var(--text-color) !important;
        }
        .dropdown-item-checked::before {
            position: absolute;
            left: .4rem;
            content: '✓';
            font-weight: 600;
        }
    </style>
    <script>
        (() => {
            'use strict'

            const getStoredTheme = () => localStorage.getItem('theme')
            const setStoredTheme = theme => localStorage.setItem('theme', theme)

            const getPreferredTheme = () => {
                const storedTheme = getStoredTheme()
                if (storedTheme) {
                    return storedTheme
                }
                return 'auto'
            }

            const setTheme = theme => {
                if (theme === 'auto') {
                    document.documentElement.setAttribute('data-bs-theme', (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'))
                } else {
                    document.documentElement.setAttribute('data-bs-theme', theme)
                }
            }

            const updateThemeSwitcher = theme => {
                const themeSwitcher = document.getElementById('theme-switcher')
                if (!themeSwitcher) {
                    return
                }
                if(theme === 'auto') {
                    themeSwitcher.innerHTML = '<i class="bi bi-circle-half"></i>'
                } else if(theme == 'light') {
                    themeSwitcher.innerHTML = '<i class="bi bi-brightness-high-fill"></i>'
                } else if(theme == 'dark') {
                    themeSwitcher.innerHTML = '<i class="bi bi-moon-stars-fill"></i>'
                }

                document.querySelectorAll('[data-bs-theme-value]').forEach(element => {
                    element.classList.remove('active')
                    element.setAttribute('aria-pressed', 'false')
                })

                const btnToActive = document.querySelector(`[data-bs-theme-value="${theme}"]`)
                btnToActive.classList.add('active')
                btnToActive.setAttribute('aria-pressed', 'true')
            }

            setTheme(getPreferredTheme())

            window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', () => {
                const storedTheme = getStoredTheme()
                if (storedTheme !== 'light' && storedTheme !== 'dark') {
                    setTheme(getPreferredTheme())
                }
            })

            window.addEventListener('DOMContentLoaded', () => {
                updateThemeSwitcher(getPreferredTheme())
                document.querySelectorAll('[data-bs-theme-value]')
                    .forEach(toggle => {
                        toggle.addEventListener('click', () => {
                            const theme = toggle.getAttribute('data-bs-theme-value')
                            setStoredTheme(theme)
                            setTheme(theme)
                            updateThemeSwitcher(theme)
                        })
                    })
            })
        })()
    </script>
    {% endblock %}
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark fixed-top">
        <div class="container-fluid">
            <button class="btn btn-custom me-2" type="button" data-bs-toggle="offcanvas" data-bs-target="#sidebar" aria-controls="sidebar">
                ☰ Меню
            </button>
            {% block navbargadget %}
            {% endblock %}
            <div class="d-flex">
                <div class="dropdown">
                    <button class="btn btn-custom ms-2 dropdown-toggle" type="button" id="theme-switcher" data-bs-toggle="dropdown" aria-expanded="false">
                        <i class="bi bi-circle-half"></i>
                    </button>
                    <ul class="dropdown-menu">
                        <li>
                            <a class="dropdown-item" href="#" data-bs-theme-value="light">
                                <i class="bi bi-brightness-high-fill me-2 opacity-50"></i> Светлая
                            </a>
                        </li>
                        <li>
                            <a class="dropdown-item" href="#" data-bs-theme-value="dark">
                                <i class="bi bi-moon-stars-fill me-2 opacity-50"></i> Тёмная
                            </a>
                        </li>
                        <li><a class="dropdown-item" href="#" data-bs-theme-value="auto">
                                <i class="bi bi-circle-half me-2 opacity-50"></i> Как в системе
                            </a>
                        </li>
                    </ul>
                </div>
                <a class="btn btn-custom ms-2" href="https://github.com/Mixxxxa/youtrack-analysis" target="_blank" role="button">
                    <i class="bi bi-github"></i> GitHub
                </a>
            </div>
        </div>
    </nav>

    <div class="offcanvas offcanvas-start" tabindex="-1" id="sidebar" aria-labelledby="sidebarLabel">
        <div class="offcanvas-header">
            <h5 class="offcanvas-title" id="sidebarLabel">Меню</h5>
            <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Закрыть"></button>
        </div>
        <div class="offcanvas-body">
            <ul class="list-group list-group-flush">
                <li class="list-group-item bg-transparent border-0"><a href="timeline" class="text-decoration-none">Timeline</a></li>
            </ul>
        </div>
    </div>

    <div class="container-fluid">
        <div class="container mt-4">
            {% block content %}{% endblock %}
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    {% block additionalscripts %}
    <script>
        // Инициализация всех tooltips
        var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
            return new bootstrap.Tooltip(tooltipTriggerEl);
        });
    </script>
    {% endblock %}
</body>
</html>
